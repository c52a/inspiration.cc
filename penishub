--//type shit
local repo = 'https://raw.githubusercontent.com/violin-suzutsuki/LinoriaLib/main/'
local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()
local Window = Library:CreateWindow({
    Title = 'Анти production | Car Driving | Accent >>>',
    Center = true,
    AutoShow = true,
    TabPadding = 8,
    MenuFadeTime = 0.2
})
local Tabs = {
    Main = Window:AddTab('< -  💸 - >'),
    ['Move'] = Window:AddTab('< -  🏎  - >'),
    ['Vis'] = Window:AddTab('< -  👁  - >'),
    ['UI Settings'] = Window:AddTab('< -  🔨  - >'),

}

--// sections


Library:Notify('Looking for settings')
wait(5)
Library:Notify('Config Files Founds!')


local SettingsForDrive = Tabs.Main:AddRightGroupbox('- - Settings - -')

SettingsForDrive:AddToggle('Drive', {
    Text = 'Auto Drive',
    Default = true, 
    Tooltip = 'Auto Drive for Farming',

    Callback = function(Value)
        
    end
})

SettingsForDrive:AddToggle('Nitro', {
    Text = 'Auto Use Nitro',
    Default = true, 
    Tooltip = 'Use Nitro for Farming',

    Callback = function(Value)
        
    end
})


SettingsForDrive:AddDivider()


SettingsForDrive:AddToggle('Velocity', {
    Text = 'Velocity Reset',
    Default = true, 
    Tooltip = 'Enable Reset', 

    Callback = function(Value)
        
    end
})

SettingsForDrive:AddToggle('Flags', {
    Text = 'Block Flagg Remotes',
    Default = true, 
    Tooltip = 'blocks u from getting flagged',

    Callback = function(Value)
        warn("USER DETECTED OF USING CHEATS FLAG : 1 due to High Velocity")
    end
})




AutoDrive:AddToggle('RegularFarm', {
    Text = 'Enable Regular Farm',
    Default = false,
    Tooltip = 'Automatically farms for you.',

    Callback = function(Value)
        if Value then
            StartRegularFarm()
        else
            StopRegularFarm()
        end
    end
})

-- Function to start the Regular Farm script
function StartRegularFarm()
    local Players = game:GetService("Players")
    local CoreGui = game:GetService("CoreGui")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local Debris = game:GetService("Debris")
    local HttpService = game:GetService("HttpService")
    local RunService = game:GetService("RunService")
    local LocalPlayer = Players.LocalPlayer
    local src = ReplicatedStorage.src
    local pcar = src.pcar
    local CarInput = require(pcar.CarInput)
    local CarPlacer = require(pcar.CarPlacer)
    local CarTracker = require(pcar.CarTracker)
    local ClientCarState = require(pcar.ClientCarState)

    if not ClientCarState.isDriving then
        local Hint = Instance.new("Hint")
        Hint.Name = HttpService:GenerateGUID(true)
        Hint.Text = "Please, Spawn/Enter Your Car (Before Executing)!"
        Hint.Parent = CoreGui
        Debris:AddItem(Hint, 5)
        return
    end

    local function ResetVelocity(Model)
        for _, Value in pairs(Model:GetDescendants()) do
            if Value:IsA("BasePart") then
                Value.Velocity = Vector3.new()
                Value.RotVelocity = Vector3.new()
            end
        end
    end

    hookfunction(CarInput.GetNitro, function()
        return true
    end)

    local _, Size = CarTracker.getCarFromDriver(LocalPlayer):GetBoundingBox()
    RegularFarmPart = Instance.new("Part")
    RegularFarmPart.Name = HttpService:GenerateGUID(true)
    RegularFarmPart.CFrame = CFrame.new(0, -50, 0)
    RegularFarmPart.Anchored = true
    RegularFarmPart.Size = Vector3.new(Size.X, 1, 2048)
    RegularFarmPart.Parent = workspace

    ResetVelocity(CarTracker.getCarFromDriver(LocalPlayer))
    CarPlacer.place(nil, CarTracker.getCarFromDriver(LocalPlayer), RegularFarmPart.CFrame + Vector3.new(0, RegularFarmPart.Size.Y / 2 + Size.Y / 2, RegularFarmPart.Size.Z / 2 - Size.Z / 2))

    RegularFarmConnection = RunService.RenderStepped:Connect(function()
        local CFramenew, _ = CarTracker.getCarFromDriver(LocalPlayer):GetBoundingBox()
        if RegularFarmPart.CFrame:ToObjectSpace(CFramenew).Z < -RegularFarmPart.Size.Z / 2 + Size.Z / 2 then
            CarPlacer.place(nil, CarTracker.getCarFromDriver(LocalPlayer), RegularFarmPart.CFrame + Vector3.new(0, RegularFarmPart.Size.Y / 2 + Size.Y / 2, RegularFarmPart.Size.Z / 2 - Size.Z / 2))
        end
    end)

    -- Start spam warning
    SpamWarning = true
    task.spawn(function()
        while SpamWarning do
            warn("USER DETECTED! unusual Movment: 1 due to High Velocity")
            wait(0.4)
            print("flag removekd becouse im way more sigma lol")
            task.wait(4) -- Wait 4 seconds before next message
        end
    end)
end

-- Function to stop the Regular Farm script
function StopRegularFarm()
    if RegularFarmConnection then
        RegularFarmConnection:Disconnect()
        RegularFarmConnection = nil
    end
    if RegularFarmPart then
        RegularFarmPart:Destroy()
        RegularFarmPart = nil
    end
    SpamWarning = false -- Stop the warning message spam
end

Toggles.RegularFarm:OnChanged(function()
    if Toggles.RegularFarm.Value then
        StartRegularFarm()
    else
        StopRegularFarm()
    end
end)




AutoDrive:AddSlider('Ezz1', {
    Text = 'task.wait(.value)',
    Default = 14,
    Min = 0,
    Max = 17,
    Rounding = 1,
    Compact = false,

    Callback = function(Value)
        
    end
})





Library:SetWatermarkVisibility(true)
local FrameTimer = tick()
local FrameCounter = 0;
local FPS = 60;
local WatermarkConnection = game:GetService('RunService').RenderStepped:Connect(function()
    FrameCounter += 1;
    if (tick() - FrameTimer) >= 1 then
        FPS = FrameCounter;
        FrameTimer = tick();
        FrameCounter = 0;
    end;
    Library:SetWatermark(('Imagin using velocity anticheat 🤣 | %s fps | %s ms'):format(
        math.floor(FPS),
        math.floor(game:GetService('Stats').Network.ServerStatsItem['Data Ping']:GetValue())
    ));
end);
Library.KeybindFrame.Visible = false;
Library:OnUnload(function()
    WatermarkConnection:Disconnect()
    print('Unloaded!')
    Library.Unloaded = true
end)
local MenuGroup = Tabs['UI Settings']:AddLeftGroupbox('Menu')
MenuGroup:AddButton('Unload', function() Library:Unload() end)
MenuGroup:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', { Default = 'End', NoUI = true, Text = 'Menu keybind' })
Library.ToggleKeybind = Options.MenuKeybind
ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({ 'MenuKeybind' })
ThemeManager:SetFolder('CarDrive')
SaveManager:SetFolder('CarDrive/game-game')
SaveManager:BuildConfigSection(Tabs['UI Settings'])
ThemeManager:ApplyToTab(Tabs['UI Settings'])
SaveManager:LoadAutoloadConfig()
